#!/bin/sh

# A hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>

remote="$1"
url="$2"

z40=0000000000000000000000000000000000000000

#upstream_pattern="github.com.*flashrom/flashrom.git"
upstream_pattern="github.com.*flashrom/flashrom.git"

# Only care about the upstream repository
if echo "$url" | grep -E -q -v "$upstream_pattern" ; then
	exit 0
fi

while read local_ref local_sha remote_ref remote_sha ; do
	if [ "$remote_ref" != "refs/heads/staging" -a "$remote_ref" != "refs/heads/stable" ]; then
		echo "Feature branches not allowed ($remote_ref)." >&2
		exit 1
	fi

	if [ "$local_sha" = $z40 ]; then
		echo "Deletion of branches is prohibited." >&2
		exit 1
	else
		if [ "$remote_sha" = "$z40" ]; then
			echo "No new branches allowed." >&2
			exit 1
		else
			# Update to existing branch, examine new commits
			range="$remote_sha..$local_sha"
		fi

		# Check for Signed-off-by and Acked-by
		commit=$(git rev-list -n 1 --all-match --invert-grep -E \
			--grep '^Signed-off-by: .+ <.+@.+\..+>$' --grep '^Acked-by: .+ <.+@.+\..+>$' "$range")
		if [ -n "$commit" ]; then
			echo "No Signoff or Ack found in commit $local_sha in $local_ref, not pushing." >&2
			exit 1
		fi

		# FIXME: check format (subject without full stop at the end etc).
		# FIXME: do buildbot checks
	fi
done

exit 0
